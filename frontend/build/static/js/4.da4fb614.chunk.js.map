{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/components/UIElements/Card.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","user/pages/auth.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Card","props","className","style","children","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFormHook","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","Auth","console","log","process","auth","useContext","AuthContext","isLoginMode","setIsLoginMode","useHttpClient","isLoading","error","sendRequest","clearError","email","password","inputHandler","setFormData","submitHandler","a","preventDefault","JSON","stringify","responseData","login","userId","token","formData","FormData","append","name","image","onClear","asOverlay","onSubmit","disabled","inverse","undefined","prevMode"],"mappings":"qGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,gCCAA,0BAYeQ,IARF,SAAAC,GACX,OACE,yBAAKC,UAAS,eAAUD,EAAMC,WAAaC,MAAOF,EAAME,OACrDF,EAAMG,Y,gCCPb,4IAQaC,EAAoB,iBAAO,CAAEC,KARX,YAUlBC,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAV+B,YAW/BE,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAfX,UAiBhBI,EAAW,SAAChB,EAAOiB,GAC9B,IAAIC,GAAU,EAD+B,uBAE7C,YAAwBD,EAAxB,+CAAoC,CAAC,IAA1BE,EAAyB,QAxBP,YAyBvBA,EAAUP,OACZM,EAAUA,GAAWlB,EAAMoB,OAAOC,OAAS,GAzBhB,cA2BzBF,EAAUP,OACZM,EAAUA,GAAWlB,EAAMoB,OAAOC,QAAUF,EAAUL,KA3B3B,cA6BzBK,EAAUP,OACZM,EAAUA,GAAWlB,EAAMoB,OAAOC,QAAUF,EAAUL,KA7BjC,QA+BnBK,EAAUP,OACZM,EAAUA,IAAYlB,GAASmB,EAAUL,KA/BpB,QAiCnBK,EAAUP,OACZM,EAAUA,IAAYlB,GAASmB,EAAUL,KAjClB,UAmCrBK,EAAUP,OACZM,EAAUA,GAAW,iBAAiBI,KAAKtB,KAnBF,kFAsB7C,OAAOkB,I,grBCvCT,IAAMK,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOb,MACb,IAAK,SACH,OAAO,EAAP,GACKY,EADL,CAEExB,MAAOyB,EAAOX,IACdI,QAASF,YAASS,EAAOX,IAAKW,EAAOR,cAEzC,IAAK,QACH,OAAO,EAAP,GACKO,EADL,CAEEE,WAAW,IAGf,QACE,OAAOF,IA4DEG,IAxDD,SAAApB,GAAU,IAAD,EACUqB,qBAAWL,EAAc,CACtDvB,MAAOO,EAAMsB,cAAgB,GAC7BH,WAAW,EACXR,QAASX,EAAMuB,eAAgB,IAJZ,mBACdC,EADc,KACFC,EADE,KAObC,EAAgB1B,EAAhB0B,GAAIC,EAAY3B,EAAZ2B,QACJlC,EAAmB+B,EAAnB/B,MAAOkB,EAAYa,EAAZb,QAEfiB,qBAAU,WACRD,EAAQD,EAAIjC,EAAOkB,KAClB,CAACe,EAAIjC,EAAOkB,EAASgB,IAExB,IAAME,EAAgB,SAAAC,GACpBL,EAAS,CAAEpB,KAAM,SAAUE,IAAKuB,EAAMC,OAAOtC,MAAOiB,WAAYV,EAAMU,cAGlEsB,EAAe,WACnBP,EAAS,CACPpB,KAAM,WAIJ4B,EACc,UAAlBjC,EAAMiC,QACJ,2BACEP,GAAI1B,EAAM0B,GACVrB,KAAML,EAAMK,KACZ6B,YAAalC,EAAMkC,YACnBC,SAAUN,EACVO,OAAQJ,EACRvC,MAAO+B,EAAW/B,QAGpB,8BACEiC,GAAI1B,EAAM0B,GACVW,KAAMrC,EAAMqC,MAAQ,EACpBD,OAAQJ,EACRG,SAAUN,EACVpC,MAAO+B,EAAW/B,QAIxB,OACE,yBACEQ,UAAS,wBAAmBuB,EAAWb,SAAWa,EAAWL,WAC3D,0BAEF,2BAAOmB,QAAStC,EAAM0B,IAAK1B,EAAMuC,OAChCN,GACCT,EAAWb,SAAWa,EAAWL,WAAa,2BAAInB,EAAMwC,c,ypBCzEhE,IAAMC,EAAc,SAACxB,EAAOC,GAC1B,OAAQA,EAAOb,MACb,IAAK,eACH,IAAIqC,GAAc,EAClB,IAAK,IAAMC,KAAW1B,EAAM2B,OACrB3B,EAAM2B,OAAOD,KAIhBD,EADEC,IAAYzB,EAAOyB,QACPD,GAAexB,EAAOP,QAEtB+B,GAAezB,EAAM2B,OAAOD,GAAShC,SAGvD,OAAO,EAAP,GACKM,EADL,CAEE2B,OAAO,EAAD,GACD3B,EAAM2B,OADL,eAEH1B,EAAOyB,QAAU,CAAElD,MAAOyB,EAAOzB,MAAOkB,QAASO,EAAOP,WAE3DA,QAAS+B,IAEb,IAAK,WACH,MAAO,CACLE,OAAQ1B,EAAO0B,OACfjC,QAASO,EAAOwB,aAEpB,QACE,OAAOzB,IA8BE4B,IA1BK,SAACC,EAAeC,GAAyB,IAAD,EAC5B1B,qBAAWoB,EAAa,CACpDG,OAAQE,EACRnC,QAASoC,IAH+C,mBACnDC,EADmD,KACxCvB,EADwC,KAuB1D,MAAO,CAACuB,EAjBaC,uBAAY,SAACvB,EAAIjC,EAAOkB,GAC3Cc,EAAS,CACPpB,KAAM,eACNZ,MAAOA,EACPkB,QAASA,EACTgC,QAASjB,MAEV,IAEiBuB,uBAAY,SAACC,EAAWC,GAC1C1B,EAAS,CACPpB,KAAM,WACNuC,OAAQM,EACRR,YAAaS,MAEd,O,0ECWUC,IA7DK,SAAApD,GAAU,IAAD,EACHqD,qBADG,mBACpBC,EADoB,KACdC,EADc,OAESF,qBAFT,mBAEpBG,EAFoB,KAERC,EAFQ,OAGGJ,oBAAS,GAHZ,mBAGpB1C,EAHoB,KAGX+C,EAHW,KAKrBC,EAAgBC,mBAEtBhC,qBAAU,WACR,GAAK0B,EAAL,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBN,EAAcI,EAAWG,SAE3BH,EAAWI,cAAcX,MACxB,CAACA,IAqBJ,OACE,yBAAKrD,UAAU,gBACb,2BACEyB,GAAI1B,EAAM0B,GACVwC,IAAKP,EACLzD,MAAO,CAAEiE,QAAS,QAClB9D,KAAK,OACL+D,OAAO,kBACPjC,SA3BgB,SAAAL,GACpB,IAAIuC,EACAC,EAAc3D,EACdmB,EAAMC,OAAOwC,OAAuC,IAA9BzC,EAAMC,OAAOwC,MAAMzD,QAC3CuD,EAAavC,EAAMC,OAAOwC,MAAM,GAChChB,EAAQc,GACRX,GAAW,GACXY,GAAc,IAEdZ,GAAW,GACXY,GAAc,GAEhBtE,EAAM2B,QAAQ3B,EAAM0B,GAAI2C,EAAYC,MAiBlC,yBAAKrE,UAAS,uBAAkBD,EAAMwE,QAAU,WAC9C,yBAAKvE,UAAU,yBACZuD,GAAc,yBAAKiB,IAAKjB,EAAYkB,IAAI,aACvClB,GAAc,qDAElB,kBAAC,IAAD,CAAQnD,KAAK,SAASsE,QAnBH,WACvBhB,EAAciB,QAAQC,UAkBlB,gBAIAlE,GAAW,2BAAIX,EAAMwC,c,6yBCiGdsC,UA3IF,WACXC,QAAQC,IAAIC,8CACZ,IAAMC,EAAOC,qBAAWC,KAFP,EAGqB/B,oBAAS,GAH9B,mBAGVgC,EAHU,KAGGC,EAHH,OAIqCC,cAA9CC,EAJS,EAITA,UAAWC,EAJF,EAIEA,MAAOC,EAJT,EAISA,YAAaC,EAJtB,EAIsBA,WAJtB,EAM8B9C,YAC7C,CACE+C,MAAO,CACLnG,MAAO,GACPkB,SAAS,GAEXkF,SAAU,CACRpG,MAAO,GACPkB,SAAS,KAGb,GAjBe,mBAMVqC,EANU,KAMC8C,EAND,KAMeC,EANf,KAiDXC,EAAa,uCAAG,WAAMlE,GAAN,mBAAAmE,EAAA,yDACpBnE,EAAMoE,iBAENnB,QAAQC,IAAIhC,IACRqC,EAJgB,0CAMWK,EAAY,GAAD,OACjCT,6CADiC,gBAEpC,OACAkB,KAAKC,UAAU,CACbR,MAAO5C,EAAUJ,OAAOgD,MAAMnG,MAC9BoG,SAAU7C,EAAUJ,OAAOiD,SAASpG,QAEtC,CACE,eAAgB,qBAdJ,OAMV4G,EANU,OAiBhBnB,EAAKoB,MAAMD,EAAaE,OAAQF,EAAaG,OAjB7B,oGAqBVC,EAAW,IAAIC,UACZC,OAAO,QAAS3D,EAAUJ,OAAOgD,MAAMnG,OAChDgH,EAASE,OAAO,OAAQ3D,EAAUJ,OAAOgE,KAAKnH,OAC9CgH,EAASE,OAAO,WAAY3D,EAAUJ,OAAOiD,SAASpG,OACtDgH,EAASE,OAAO,QAAS3D,EAAUJ,OAAOiE,MAAMpH,OAzBhC,UA2BWiG,EAAY,GAAD,OACjCT,6CADiC,iBAEpC,OACAwB,GA9Bc,QA2BVJ,EA3BU,OAiChBnB,EAAKoB,MAAMD,EAAaE,OAAQF,EAAaG,OAjC7B,qHAAH,sDAsCnB,OACE,oCACE,kBAAC,IAAD,CAAYf,MAAOA,EAAOqB,QAASnB,IACnC,kBAAC,IAAD,CAAM1F,UAAU,kBACbuF,GAAa,kBAAC,IAAD,CAAgBuB,WAAS,IACvC,8CACA,6BACA,0BAAMC,SAAUhB,IACZX,GACA,kBAAC,IAAD,CACEpD,QAAQ,QACRP,GAAG,OACHrB,KAAK,OACLkC,MAAM,YACN7B,WAAY,CAACN,eACboC,UAAU,uBACVb,QAASmE,KAGXT,GACA,kBAAC,IAAD,CAAab,QAAM,EAAC9C,GAAG,QAAQC,QAASmE,EAActD,UAAU,6BAElE,kBAAC,IAAD,CACEd,GAAG,QACHO,QAAQ,QACR5B,KAAK,OACLkC,MAAM,QACN7B,WAAY,CAACN,cAAqBI,eAClCgC,UAAU,8BACVb,QAASmE,IAEX,kBAAC,IAAD,CACEpE,GAAG,WACHO,QAAQ,QACR5B,KAAK,WACLkC,MAAM,WACN7B,WAAY,CAACJ,YAAoB,IACjCkC,UAAU,yDACVb,QAASmE,IAEX,kBAAC,IAAD,CAAQzF,KAAK,SAAS4G,UAAWjE,EAAUrC,SACxC0E,EAAc,QAAU,WAG7B,kBAAC,IAAD,CAAQ6B,SAAO,EAACvC,QA/GI,WACnBU,EAUHU,EAAY,EAAD,GAEJ/C,EAAUJ,OAFN,CAGPgE,KAAM,CACJnH,MAAO,GACPkB,SAAS,GAEXkG,MAAO,CACLpH,MAAO,KACPkB,SAAS,MAGb,GArBFoF,EAAY,EAAD,GAEJ/C,EAAUJ,OAFN,CAGPgE,UAAMO,EACNN,WAAOM,IAETnE,EAAUJ,OAAOgD,MAAMjF,SAAWqC,EAAUJ,OAAOiD,SAASlF,SAkBhE2E,GAAe,SAAA8B,GAAQ,OAAKA,OAqFxB,aACa/B,EAAc,SAAW","file":"static/js/4.da4fb614.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators';\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({ type: \"CHANGE\", val: event.target.value, validators: props.validators });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        \"form-control--invalid\"}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nconst useFormHook = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n\nexport default useFormHook;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useState, useContext } from \"react\";\n\nimport Button from \"../../shared/components/FormElements/Button\";\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Card from \"../../shared/components/UIElements/Card\";\nimport ErrorModal from \"../../shared/components/UIElements/ErrorModal\";\nimport LoadingSpinner from \"../../shared/components/UIElements/LoadingSpinner\";\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_EMAIL,\n  VALIDATOR_MINLENGTH\n} from \"../../shared/util/validators\";\nimport useFormHook from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from \"../../shared/context/auth-context\";\n\nimport \"./auth.css\";\n\nconst Auth = () => {\n  console.log(process.env.REACT_APP_BACKEND_URL);\n  const auth = useContext(AuthContext);\n  const [isLoginMode, setIsLoginMode] = useState(true);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n\n  const [formState, inputHandler, setFormData] = useFormHook(\n    {\n      email: {\n        value: \"\",\n        isValid: false\n      },\n      password: {\n        value: \"\",\n        isValid: false\n      }\n    },\n    false\n  );\n\n  const switchModeHandler = () => {\n    if (!isLoginMode) {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: undefined,\n          image: undefined\n        },\n        formState.inputs.email.isValid && formState.inputs.password.isValid\n      );\n    } else {\n      setFormData(\n        {\n          ...formState.inputs,\n          name: {\n            value: \"\",\n            isValid: false\n          },\n          image: {\n            value: null,\n            isValid: false\n          }\n        },\n        false\n      );\n    }\n    setIsLoginMode(prevMode => !prevMode);\n  };\n\n  const submitHandler = async event => {\n    event.preventDefault();\n\n    console.log(formState);\n    if (isLoginMode) {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/login`,\n          'POST',\n          JSON.stringify({\n            email: formState.inputs.email.value,\n            password: formState.inputs.password.value\n          }),\n          {\n            'Content-Type': 'application/json'\n          }\n        );\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    } else {\n      try {\n        const formData = new FormData();\n        formData.append('email', formState.inputs.email.value);\n        formData.append('name', formState.inputs.name.value);\n        formData.append('password', formState.inputs.password.value);\n        formData.append('image', formState.inputs.image.value);\n\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/users/signup`,\n          'POST',\n          formData\n        );\n\n        auth.login(responseData.userId, responseData.token);\n      } catch (err) {}\n    }\n  };\n\n  return (\n    <>\n      <ErrorModal error={error} onClear={clearError} />\n      <Card className=\"authentication\">\n        {isLoading && <LoadingSpinner asOverlay />}\n        <h2>Login Required</h2>\n        <hr />\n        <form onSubmit={submitHandler}>\n          {!isLoginMode && (\n            <Input\n              element=\"input\"\n              id=\"name\"\n              type=\"text\"\n              label=\"Your Name\"\n              validators={[VALIDATOR_REQUIRE()]}\n              errorText=\"Please enter a name.\"\n              onInput={inputHandler}\n            />\n          )}\n          {!isLoginMode && (\n            <ImageUpload center id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\"/>\n          )}\n          <Input\n            id=\"email\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Email\"\n            validators={[VALIDATOR_REQUIRE(), VALIDATOR_EMAIL()]}\n            errorText=\"Please enter a valid email.\"\n            onInput={inputHandler}\n          />\n          <Input\n            id=\"password\"\n            element=\"input\"\n            type=\"password\"\n            label=\"Password\"\n            validators={[VALIDATOR_MINLENGTH(5)]}\n            errorText=\"Please enter a valid password (at least 5 characters).\"\n            onInput={inputHandler}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            {isLoginMode ? \"LOGIN\" : \"SIGNUP\"}\n          </Button>\n        </form>\n        <Button inverse onClick={switchModeHandler}>\n          SWITCH TO {isLoginMode ? \"SIGNUP\" : \"LOGIN\"}\n        </Button>\n      </Card>\n    </>\n  );\n};\n\nexport default Auth;\n"],"sourceRoot":""}