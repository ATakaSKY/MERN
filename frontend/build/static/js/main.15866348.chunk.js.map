{"version":3,"sources":["shared/context/auth-context.js","shared/components/UIElements/LoadingSpinner.js","shared/components/UIElements/Backdrop.js","shared/hooks/auth-hook.js","shared/components/Navigation/MainHeader.js","shared/components/Navigation/NavLinks.js","shared/components/Navigation/SideDrawer.js","shared/components/Navigation/MainNavigation.js","App.js","index.js"],"names":["AuthContext","createContext","isLoggedIn","userId","token","login","logout","LoadingSpinner","props","className","asOverlay","Backdrop","ReactDOM","createPortal","onClick","document","getElementById","logoutTimer","MainHeader","children","NavLinks","auth","useContext","to","exact","SideDrawer","content","CSSTransition","in","show","timeout","classNames","mountOnEnter","unmountOnExit","MainNavigation","useState","drawerIsOpen","setDrawerIsOpen","closeDrawer","Fragment","Users","React","lazy","NewPlace","UserPlaces","UpdatePlace","Auth","App","routes","setToken","setUserId","tokenExpirationDate","setTokenExpirationDate","useCallback","uid","expirationTime","expiration","Date","getTime","localStorage","setItem","JSON","stringify","toISOString","removeItem","useEffect","storedData","parse","getItem","remainingTime","setTimeout","clearTimeout","useAuth","path","Provider","value","fallback","render"],"mappings":"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","file":"static/js/main.15866348.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nexport const AuthContext = createContext({\n  isLoggedIn: false,\n  userId: null,\n  token:null,\n  login: () => {},\n  logout: () => {}\n});\n","import React from 'react';\n\nimport './LoadingSpinner.css';\n\nconst LoadingSpinner = props => {\n  return (\n    <div className={`${props.asOverlay && 'loading-spinner__overlay'}`}>\n      <div className=\"lds-dual-ring\"></div>\n    </div>\n  );\n};\n\nexport default LoadingSpinner;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './Backdrop.css';\n\nconst Backdrop = props => {\n  return ReactDOM.createPortal(\n    <div className=\"backdrop\" onClick={props.onClick}></div>,\n    document.getElementById('backdrop-hook')\n  );\n};\n\nexport default Backdrop;\n","import { useState, useCallback, useEffect } from \"react\";\n\nlet logoutTimer;\n\nexport const useAuth = () => {\n  const [token, setToken] = useState(false);\n  const [userId, setUserId] = useState(false);\n  const [tokenExpirationDate, setTokenExpirationDate] = useState();\n\n  const login = useCallback((uid, token, expirationTime) => {\n    setToken(token);\n    setUserId(uid);\n    const expiration =\n      expirationTime || new Date(new Date().getTime() + 1000 * 60 * 60);\n    setTokenExpirationDate(expiration);\n    localStorage.setItem(\n      \"userData\",\n      JSON.stringify({\n        userId: uid,\n        token,\n        expirationTime: expiration.toISOString()\n      })\n    );\n  }, []);\n\n  const logout = useCallback(() => {\n    setToken(null);\n    setUserId(null);\n    localStorage.removeItem(\"userData\");\n  }, []);\n\n  useEffect(() => {\n    const storedData = JSON.parse(localStorage.getItem(\"userData\"));\n    if (\n      storedData &&\n      storedData.token &&\n      new Date(storedData.expirationTime) > new Date()\n    ) {\n      login(\n        storedData.userId,\n        storedData.token,\n        new Date(storedData.expirationTime)\n      );\n    }\n  }, [login]);\n\n  useEffect(() => {\n    if (token && tokenExpirationDate) {\n      const remainingTime =\n        tokenExpirationDate.getTime() - new Date().getTime();\n      logoutTimer = setTimeout(logout, remainingTime);\n    } else {\n      clearTimeout(logoutTimer);\n    }\n  }, [token, logout, tokenExpirationDate]);\n\n  return { token, login, logout, userId };\n};\n","import React from 'react';\n\nimport './MainHeader.css';\n\nconst MainHeader = props => {\n  return <header className=\"main-header\">{props.children}</header>;\n};\n\nexport default MainHeader;\n","import React, { useContext } from \"react\";\nimport { NavLink } from \"react-router-dom\";\n\nimport { AuthContext } from \"../../context/auth-context\";\nimport \"./NavLinks.css\";\n\nconst NavLinks = props => {\n  const auth = useContext(AuthContext);\n\n  return (\n    <ul className=\"nav-links\">\n      <li>\n        <NavLink to=\"/\" exact>\n          ALL USERS\n        </NavLink>\n      </li>\n      {auth.isLoggedIn && (\n        <>\n          <li>\n            <NavLink to={`/${auth.userId}/places`}>MY PLACES</NavLink>\n          </li>\n          <li>\n            <NavLink to=\"/places/new\">ADD PLACE</NavLink>\n          </li>\n          <li>\n            <button onClick={auth.logout}>LOGOUT</button>\n          </li>\n        </>\n      )}\n      {!auth.isLoggedIn && (\n        <li>\n          <NavLink to=\"/auth\">AUTHENTICATE</NavLink>\n        </li>\n      )}\n    </ul>\n  );\n};\n\nexport default NavLinks;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { CSSTransition } from 'react-transition-group';\n\nimport \"./SideDrawer.css\";\n\nconst SideDrawer = props => {\n  const content = (\n    <CSSTransition\n      in={props.show}\n      timeout={200}\n      classNames=\"slide-in-left\"\n      mountOnEnter\n      unmountOnExit\n    >\n      <aside className=\"side-drawer\" onClick={props.onClick}>\n        {props.children}\n      </aside>\n    </CSSTransition>\n  );\n\n  return ReactDOM.createPortal(content, document.getElementById(\"drawer-hook\"));\n};\n\nexport default SideDrawer;\n","import React, {useState} from 'react';\nimport { Link } from 'react-router-dom';\n\nimport MainHeader from './MainHeader';\nimport NavLinks from './NavLinks';\nimport SideDrawer from './SideDrawer';\nimport './MainNavigation.css';\nimport Backdrop from '../UIElements/Backdrop';\n\nconst MainNavigation = props => {\n\n  const [drawerIsOpen, setDrawerIsOpen] = useState(false);\n\n  const openDrawer = () => {\n    setDrawerIsOpen(true);\n  }\n\n  const closeDrawer = () => {\n    setDrawerIsOpen(false);\n  }\n\n  return (\n    <React.Fragment>\n      { drawerIsOpen && <Backdrop onClick={closeDrawer}/> }\n      <SideDrawer show={drawerIsOpen} onClick={closeDrawer}>\n        <nav className=\"main-navigation__drawer-nav\">\n          <NavLinks />\n        </nav>\n      </SideDrawer>\n      <MainHeader>\n        <button className=\"main-navigation__menu-btn\" onClick={openDrawer}>\n          <span />\n          <span />\n          <span />\n        </button>\n        <h1 className=\"main-navigation__title\">\n          <Link to=\"/\">YourPlaces</Link>\n        </h1>\n        <nav className=\"main-navigation__header-nav\">\n          <NavLinks />\n        </nav>\n      </MainHeader>\n    </React.Fragment>\n  );\n};\n\nexport default MainNavigation;\n","import React, { Suspense } from \"react\";\nimport {\n  BrowserRouter as Router,\n  Route,\n  Redirect,\n  Switch\n} from \"react-router-dom\";\n\n// import Users from \"./user/pages/Users\";\n// import NewPlace from \"./places/pages/NewPlace\";\n// import UserPlaces from \"./places/pages/UserPlaces\";\nimport MainNavigation from \"./shared/components/Navigation/MainNavigation\";\n// import UpdatePlace from \"./places/pages/UpdatePlace\";\n// import Auth from \"./user/pages/auth\";\nimport { AuthContext } from './shared/context/auth-context';\nimport { useAuth } from \"./shared/hooks/auth-hook\";\nimport LoadingSpinner from \"./shared/components/UIElements/LoadingSpinner\";\n\nconst Users = React.lazy(() => import('./user/pages/Users'))\nconst NewPlace = React.lazy(() => import('./places/pages/NewPlace'))\nconst UserPlaces = React.lazy(() => import('./places/pages/UserPlaces'))\nconst UpdatePlace = React.lazy(() => import('./places/pages/UpdatePlace'))\nconst Auth = React.lazy(() => import('./user/pages/auth'))\n\nconst App = () => {\n\n  let { token, login, logout, userId } = useAuth();\n\n  let routes;\n\n  if (token) {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/places/new\" exact>\n          <NewPlace />\n        </Route>\n        <Route path=\"/places/:placeId\">\n          <UpdatePlace />\n        </Route>\n        <Redirect to=\"/\" />\n      </Switch>\n    );\n  } else {\n    routes = (\n      <Switch>\n        <Route path=\"/\" exact>\n          <Users />\n        </Route>\n        <Route path=\"/:userId/places\" exact>\n          <UserPlaces />\n        </Route>\n        <Route path=\"/auth\">\n          <Auth />\n        </Route>\n        <Redirect to=\"/auth\" />\n      </Switch>\n    );\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{ isLoggedIn: !!token,token: token, login: login, logout: logout, userId: userId }}\n    >\n      <Router>\n        <MainNavigation />\n        <main>\n          <Suspense fallback={\n            <div className=\"center\">\n              <LoadingSpinner />\n            </div>\n          }>\n            {routes}\n          </Suspense>\n        </main>\n      </Router>\n    </AuthContext.Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}