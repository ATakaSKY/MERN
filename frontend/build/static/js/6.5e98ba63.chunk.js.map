{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/components/UIElements/Card.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","places/pages/UpdatePlace.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","Card","props","className","style","children","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFormHook","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","UpdatePlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","useState","loadedPlace","setLoadedPlace","placeId","useParams","history","useHistory","title","description","inputHandler","setFormData","a","process","responseData","place","fetchPlace","placeUpdateSubmitHandler","preventDefault","JSON","stringify","Authorization","token","push","userId","Fragment","onClear","onSubmit","disabled"],"mappings":"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","file":"static/js/6.5e98ba63.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","import React from 'react';\n\nimport './Card.css';\n\nconst Card = props => {\n  return (\n    <div className={`card ${props.className}`} style={props.style}>\n      {props.children}\n    </div>\n  );\n};\n\nexport default Card;\n","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators';\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({ type: \"CHANGE\", val: event.target.value, validators: props.validators });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        \"form-control--invalid\"}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nconst useFormHook = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n\nexport default useFormHook;\n","import React, { useEffect, useState, useContext } from 'react';\nimport { useParams, useHistory } from 'react-router-dom';\n\nimport Input from '../../shared/components/FormElements/Input';\nimport Button from '../../shared/components/FormElements/Button';\nimport Card from '../../shared/components/UIElements/Card';\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from '../../shared/util/validators';\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport useFormHook from \"../../shared/hooks/form-hook\";\nimport { AuthContext } from '../../shared/context/auth-context';\nimport './PlaceForm.css';\n\nconst UpdatePlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [loadedPlace, setLoadedPlace] = useState();\n  const placeId = useParams().placeId;\n  const history = useHistory();\n\n  const [formState, inputHandler, setFormData] = useFormHook(\n    {\n      title: {\n        value: '',\n        isValid: false\n      },\n      description: {\n        value: '',\n        isValid: false\n      }\n    },\n    false\n  );\n\n  useEffect(() => {\n    const fetchPlace = async () => {\n      try {\n        const responseData = await sendRequest(\n          `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`\n        );\n        setLoadedPlace(responseData.place);\n        setFormData(\n          {\n            title: {\n              value: responseData.place.title,\n              isValid: true\n            },\n            description: {\n              value: responseData.place.description,\n              isValid: true\n            }\n          },\n          true\n        );\n\n      } catch (err) {}\n    };\n    fetchPlace();\n  }, [sendRequest, placeId, setFormData]);\n\n  const placeUpdateSubmitHandler = async event => {\n    event.preventDefault();\n    try {\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places/${placeId}`,\n        'PATCH',\n        JSON.stringify({\n          title: formState.inputs.title.value,\n          description: formState.inputs.description.value\n        }),\n        {\n          'Content-Type': 'application/json',\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/' + auth.userId + '/places');\n    } catch (err) {}\n  };\n\n  if (isLoading) {\n    return (\n      <div className=\"center\">\n        <h2>Loading...</h2>\n      </div>\n    );\n  }\n\n  if (!loadedPlace && !error) {\n    return (\n      <div className=\"center\">\n        <Card>\n          <h2>Could not find place!</h2>\n        </Card>\n      </div>\n    );\n  }\n\n \n\n  return (\n    <React.Fragment>\n      <ErrorModal error={error} onClear={clearError} />\n      {!isLoading && loadedPlace && (\n        <form className=\"place-form\" onSubmit={placeUpdateSubmitHandler}>\n          <Input\n            id=\"title\"\n            element=\"input\"\n            type=\"text\"\n            label=\"Title\"\n            validators={[VALIDATOR_REQUIRE()]}\n            errorText=\"Please enter a valid title.\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.title}\n            initialValid={true}\n          />\n          <Input\n            id=\"description\"\n            element=\"textarea\"\n            label=\"Description\"\n            validators={[VALIDATOR_MINLENGTH(6)]}\n            errorText=\"Please enter a valid description (min. 6 characters).\"\n            onInput={inputHandler}\n            initialValue={loadedPlace.description}\n            initialValid={true}\n          />\n          <Button type=\"submit\" disabled={!formState.isValid}>\n            UPDATE PLACE\n          </Button>\n        </form>\n      )}\n    </React.Fragment>\n  );\n};\n\nexport default UpdatePlace;\n"],"sourceRoot":""}