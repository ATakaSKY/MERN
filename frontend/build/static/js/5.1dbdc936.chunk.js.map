{"version":3,"sources":["../node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty.js","shared/util/validators.js","shared/components/FormElements/Input.js","shared/hooks/form-hook.js","shared/components/FormElements/ImageUpload.js","places/pages/NewPlace.js"],"names":["_defineProperty","obj","key","value","Object","defineProperty","enumerable","configurable","writable","VALIDATOR_REQUIRE","type","VALIDATOR_MINLENGTH","val","VALIDATOR_EMAIL","validate","validators","isValid","validator","trim","length","test","inputReducer","state","action","isTouched","Input","props","useReducer","initialValue","initialValid","inputState","dispatch","id","onInput","useEffect","changeHandler","event","target","touchHandler","element","placeholder","onChange","onBlur","rows","className","htmlFor","label","errorText","formReducer","formIsValid","inputId","inputs","useFormHook","initialInputs","initialFormValidity","formState","useCallback","inputData","formValidity","ImageUpload","useState","file","setFile","previewUrl","setPreviewUrl","setIsValid","filePickerRef","useRef","fileReader","FileReader","onload","result","readAsDataURL","ref","style","display","accept","pickedFile","fileIsValid","files","center","src","alt","onClick","current","click","NewPlace","auth","useContext","AuthContext","useHttpClient","isLoading","error","sendRequest","clearError","title","description","address","image","inputHandler","history","useHistory","submitHandler","a","preventDefault","formData","FormData","append","process","Authorization","token","push","onClear","onSubmit","asOverlay","disabled"],"mappings":"qGAAe,SAASA,EAAgBC,EAAKC,EAAKC,GAYhD,OAXID,KAAOD,EACTG,OAAOC,eAAeJ,EAAKC,EAAK,CAC9BC,MAAOA,EACPG,YAAY,EACZC,cAAc,EACdC,UAAU,IAGZP,EAAIC,GAAOC,EAGNF,EAZT,mC,gCCAA,4IAQaQ,EAAoB,iBAAO,CAAEC,KARX,YAUlBC,EAAsB,SAAAC,GAAG,MAAK,CACzCF,KAV+B,YAW/BE,IAAKA,IAQMC,EAAkB,iBAAO,CAAEH,KAfX,UAiBhBI,EAAW,SAACX,EAAOY,GAC9B,IAAIC,GAAU,EAD+B,uBAE7C,YAAwBD,EAAxB,+CAAoC,CAAC,IAA1BE,EAAyB,QAxBP,YAyBvBA,EAAUP,OACZM,EAAUA,GAAWb,EAAMe,OAAOC,OAAS,GAzBhB,cA2BzBF,EAAUP,OACZM,EAAUA,GAAWb,EAAMe,OAAOC,QAAUF,EAAUL,KA3B3B,cA6BzBK,EAAUP,OACZM,EAAUA,GAAWb,EAAMe,OAAOC,QAAUF,EAAUL,KA7BjC,QA+BnBK,EAAUP,OACZM,EAAUA,IAAYb,GAASc,EAAUL,KA/BpB,QAiCnBK,EAAUP,OACZM,EAAUA,IAAYb,GAASc,EAAUL,KAjClB,UAmCrBK,EAAUP,OACZM,EAAUA,GAAW,iBAAiBI,KAAKjB,KAnBF,kFAsB7C,OAAOa,I,2pBCvCT,IAAMK,EAAe,SAACC,EAAOC,GAC3B,OAAQA,EAAOb,MACb,IAAK,SACH,OAAO,EAAP,GACKY,EADL,CAEEnB,MAAOoB,EAAOX,IACdI,QAASF,YAASS,EAAOX,IAAKW,EAAOR,cAEzC,IAAK,QACH,OAAO,EAAP,GACKO,EADL,CAEEE,WAAW,IAGf,QACE,OAAOF,IA4DEG,IAxDD,SAAAC,GAAU,IAAD,EACUC,qBAAWN,EAAc,CACtDlB,MAAOuB,EAAME,cAAgB,GAC7BJ,WAAW,EACXR,QAASU,EAAMG,eAAgB,IAJZ,mBACdC,EADc,KACFC,EADE,KAObC,EAAgBN,EAAhBM,GAAIC,EAAYP,EAAZO,QACJ9B,EAAmB2B,EAAnB3B,MAAOa,EAAYc,EAAZd,QAEfkB,qBAAU,WACRD,EAAQD,EAAI7B,EAAOa,KAClB,CAACgB,EAAI7B,EAAOa,EAASiB,IAExB,IAAME,EAAgB,SAAAC,GACpBL,EAAS,CAAErB,KAAM,SAAUE,IAAKwB,EAAMC,OAAOlC,MAAOY,WAAYW,EAAMX,cAGlEuB,EAAe,WACnBP,EAAS,CACPrB,KAAM,WAIJ6B,EACc,UAAlBb,EAAMa,QACJ,2BACEP,GAAIN,EAAMM,GACVtB,KAAMgB,EAAMhB,KACZ8B,YAAad,EAAMc,YACnBC,SAAUN,EACVO,OAAQJ,EACRnC,MAAO2B,EAAW3B,QAGpB,8BACE6B,GAAIN,EAAMM,GACVW,KAAMjB,EAAMiB,MAAQ,EACpBD,OAAQJ,EACRG,SAAUN,EACVhC,MAAO2B,EAAW3B,QAIxB,OACE,yBACEyC,UAAS,wBAAmBd,EAAWd,SAAWc,EAAWN,WAC3D,0BAEF,2BAAOqB,QAASnB,EAAMM,IAAKN,EAAMoB,OAChCP,GACCT,EAAWd,SAAWc,EAAWN,WAAa,2BAAIE,EAAMqB,c,ypBCzEhE,IAAMC,EAAc,SAAC1B,EAAOC,GAC1B,OAAQA,EAAOb,MACb,IAAK,eACH,IAAIuC,GAAc,EAClB,IAAK,IAAMC,KAAW5B,EAAM6B,OACrB7B,EAAM6B,OAAOD,KAIhBD,EADEC,IAAY3B,EAAO2B,QACPD,GAAe1B,EAAOP,QAEtBiC,GAAe3B,EAAM6B,OAAOD,GAASlC,SAGvD,OAAO,EAAP,GACKM,EADL,CAEE6B,OAAO,EAAD,GACD7B,EAAM6B,OADL,eAEH5B,EAAO2B,QAAU,CAAE/C,MAAOoB,EAAOpB,MAAOa,QAASO,EAAOP,WAE3DA,QAASiC,IAEb,IAAK,WACH,MAAO,CACLE,OAAQ5B,EAAO4B,OACfnC,QAASO,EAAO0B,aAEpB,QACE,OAAO3B,IA8BE8B,IA1BK,SAACC,EAAeC,GAAyB,IAAD,EAC5B3B,qBAAWqB,EAAa,CACpDG,OAAQE,EACRrC,QAASsC,IAH+C,mBACnDC,EADmD,KACxCxB,EADwC,KAuB1D,MAAO,CAACwB,EAjBaC,uBAAY,SAACxB,EAAI7B,EAAOa,GAC3Ce,EAAS,CACPrB,KAAM,eACNP,MAAOA,EACPa,QAASA,EACTkC,QAASlB,MAEV,IAEiBwB,uBAAY,SAACC,EAAWC,GAC1C3B,EAAS,CACPrB,KAAM,WACNyC,OAAQM,EACRR,YAAaS,MAEd,O,0ECWUC,IA7DK,SAAAjC,GAAU,IAAD,EACHkC,qBADG,mBACpBC,EADoB,KACdC,EADc,OAESF,qBAFT,mBAEpBG,EAFoB,KAERC,EAFQ,OAGGJ,oBAAS,GAHZ,mBAGpB5C,EAHoB,KAGXiD,EAHW,KAKrBC,EAAgBC,mBAEtBjC,qBAAU,WACR,GAAK2B,EAAL,CAGA,IAAMO,EAAa,IAAIC,WACvBD,EAAWE,OAAS,WAClBN,EAAcI,EAAWG,SAE3BH,EAAWI,cAAcX,MACxB,CAACA,IAqBJ,OACE,yBAAKjB,UAAU,gBACb,2BACEZ,GAAIN,EAAMM,GACVyC,IAAKP,EACLQ,MAAO,CAAEC,QAAS,QAClBjE,KAAK,OACLkE,OAAO,kBACPnC,SA3BgB,SAAAL,GACpB,IAAIyC,EACAC,EAAc9D,EACdoB,EAAMC,OAAO0C,OAAuC,IAA9B3C,EAAMC,OAAO0C,MAAM5D,QAC3C0D,EAAazC,EAAMC,OAAO0C,MAAM,GAChCjB,EAAQe,GACRZ,GAAW,GACXa,GAAc,IAEdb,GAAW,GACXa,GAAc,GAEhBpD,EAAMO,QAAQP,EAAMM,GAAI6C,EAAYC,MAiBlC,yBAAKlC,UAAS,uBAAkBlB,EAAMsD,QAAU,WAC9C,yBAAKpC,UAAU,yBACZmB,GAAc,yBAAKkB,IAAKlB,EAAYmB,IAAI,aACvCnB,GAAc,qDAElB,kBAAC,IAAD,CAAQrD,KAAK,SAASyE,QAnBH,WACvBjB,EAAckB,QAAQC,UAkBlB,gBAIArE,GAAW,2BAAIU,EAAMqB,c,2NC6CduC,UAxFE,WACf,IAAMC,EAAOC,qBAAWC,KADH,EAEiCC,cAA9CC,EAFa,EAEbA,UAAWC,EAFE,EAEFA,MAAOC,EAFL,EAEKA,YAAaC,EAFlB,EAEkBA,WAFlB,EAGa1C,YAChC,CACE2C,MAAO,CACL5F,MAAO,GACPa,SAAS,GAEXgF,YAAa,CACX7F,MAAO,GACPa,SAAS,GAEXiF,QAAS,CACP9F,MAAO,GACPa,SAAS,GAEXkF,MAAO,CACL/F,MAAO,KACPa,SAAS,KAGb,GAtBmB,mBAGduC,EAHc,KAGH4C,EAHG,KAyBfC,EAAUC,cAEVC,EAAa,uCAAG,WAAMlE,GAAN,eAAAmE,EAAA,6DACpBnE,EAAMoE,iBADc,UAGZC,EAAW,IAAIC,UAEZC,OAAO,QAASpD,EAAUJ,OAAO4C,MAAM5F,OAChDsG,EAASE,OAAO,cAAepD,EAAUJ,OAAO6C,YAAY7F,OAC5DsG,EAASE,OAAO,UAAWpD,EAAUJ,OAAO8C,QAAQ9F,OACpDsG,EAASE,OAAO,QAASpD,EAAUJ,OAAO+C,MAAM/F,OAR9B,UASZ0F,EAAY,GAAD,OACZe,6CADY,WAEf,OACAH,EACA,CACEI,cAAe,UAAYtB,EAAKuB,QAdlB,QAiBlBV,EAAQW,KAAK,KAjBK,4GAAH,sDAqBnB,OACE,oCACA,kBAAC,IAAD,CAAYnB,MAAOA,EAAOoB,QAASlB,IACnC,0BAAMlD,UAAU,aAAaqE,SAAUX,GACtCX,GAAa,kBAAC,IAAD,CAAgBuB,WAAS,IACrC,kBAAC,IAAD,CACElF,GAAG,QACHO,QAAQ,QACR7B,KAAK,OACLoC,MAAM,QACN/B,WAAY,CAACN,eACbsC,UAAU,8BACVd,QAASkE,IAEX,kBAAC,IAAD,CACEnE,GAAG,cACHO,QAAQ,WACRO,MAAM,cACN/B,WAAY,CAACJ,YAAoB,IACjCoC,UAAU,4DACVd,QAASkE,IAEX,kBAAC,IAAD,CACEnE,GAAG,UACHO,QAAQ,QACR7B,KAAK,OACLoC,MAAM,UACN/B,WAAY,CAACN,eACbsC,UAAU,gCACVd,QAASkE,IAEX,kBAAC,IAAD,CAAanE,GAAG,QAAQC,QAASkE,EAAcpD,UAAU,6BACzD,kBAAC,IAAD,CAAQrC,KAAK,SAASyG,UAAW5D,EAAUvC,SAA3C","file":"static/js/5.1dbdc936.chunk.js","sourcesContent":["export default function _defineProperty(obj, key, value) {\n  if (key in obj) {\n    Object.defineProperty(obj, key, {\n      value: value,\n      enumerable: true,\n      configurable: true,\n      writable: true\n    });\n  } else {\n    obj[key] = value;\n  }\n\n  return obj;\n}","const VALIDATOR_TYPE_REQUIRE = 'REQUIRE';\nconst VALIDATOR_TYPE_MINLENGTH = 'MINLENGTH';\nconst VALIDATOR_TYPE_MAXLENGTH = 'MAXLENGTH';\nconst VALIDATOR_TYPE_MIN = 'MIN';\nconst VALIDATOR_TYPE_MAX = 'MAX';\nconst VALIDATOR_TYPE_EMAIL = 'EMAIL';\nconst VALIDATOR_TYPE_FILE = 'FILE';\n\nexport const VALIDATOR_REQUIRE = () => ({ type: VALIDATOR_TYPE_REQUIRE });\nexport const VALIDATOR_FILE = () => ({ type: VALIDATOR_TYPE_FILE });\nexport const VALIDATOR_MINLENGTH = val => ({\n  type: VALIDATOR_TYPE_MINLENGTH,\n  val: val\n});\nexport const VALIDATOR_MAXLENGTH = val => ({\n  type: VALIDATOR_TYPE_MAXLENGTH,\n  val: val\n});\nexport const VALIDATOR_MIN = val => ({ type: VALIDATOR_TYPE_MIN, val: val });\nexport const VALIDATOR_MAX = val => ({ type: VALIDATOR_TYPE_MAX, val: val });\nexport const VALIDATOR_EMAIL = () => ({ type: VALIDATOR_TYPE_EMAIL });\n\nexport const validate = (value, validators) => {\n  let isValid = true;\n  for (const validator of validators) {\n    if (validator.type === VALIDATOR_TYPE_REQUIRE) {\n      isValid = isValid && value.trim().length > 0;\n    }\n    if (validator.type === VALIDATOR_TYPE_MINLENGTH) {\n      isValid = isValid && value.trim().length >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAXLENGTH) {\n      isValid = isValid && value.trim().length <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MIN) {\n      isValid = isValid && +value >= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_MAX) {\n      isValid = isValid && +value <= validator.val;\n    }\n    if (validator.type === VALIDATOR_TYPE_EMAIL) {\n      isValid = isValid && /^\\S+@\\S+\\.\\S+$/.test(value);\n    }\n  }\n  return isValid;\n};\n","import React, { useReducer, useEffect } from \"react\";\n\nimport { validate } from '../../util/validators';\nimport \"./Input.css\";\n\nconst inputReducer = (state, action) => {\n  switch (action.type) {\n    case \"CHANGE\":\n      return {\n        ...state,\n        value: action.val,\n        isValid: validate(action.val, action.validators)\n      };\n    case \"TOUCH\": {\n      return {\n        ...state,\n        isTouched: true\n      };\n    }\n    default:\n      return state;\n  }\n};\n\nconst Input = props => {\n  const [inputState, dispatch] = useReducer(inputReducer, {\n    value: props.initialValue || \"\",\n    isTouched: false,\n    isValid: props.initialValid || false\n  });\n\n  const { id, onInput } = props;\n  const { value, isValid } = inputState;\n\n  useEffect(() => {\n    onInput(id, value, isValid)\n  }, [id, value, isValid, onInput]);\n\n  const changeHandler = event => {\n    dispatch({ type: \"CHANGE\", val: event.target.value, validators: props.validators });\n  };\n\n  const touchHandler = () => {\n    dispatch({\n      type: 'TOUCH'\n    });\n  };\n\n  const element =\n    props.element === \"input\" ? (\n      <input\n        id={props.id}\n        type={props.type}\n        placeholder={props.placeholder}\n        onChange={changeHandler}\n        onBlur={touchHandler}\n        value={inputState.value}\n      />\n    ) : (\n      <textarea\n        id={props.id}\n        rows={props.rows || 3}\n        onBlur={touchHandler}\n        onChange={changeHandler}\n        value={inputState.value}\n      />\n    );\n\n  return (\n    <div\n      className={`form-control ${!inputState.isValid && inputState.isTouched &&\n        \"form-control--invalid\"}`}\n    >\n      <label htmlFor={props.id}>{props.label}</label>\n      {element}\n      {!inputState.isValid && inputState.isTouched && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default Input;\n","import { useCallback, useReducer } from 'react';\n\nconst formReducer = (state, action) => {\n  switch (action.type) {\n    case 'INPUT_CHANGE':\n      let formIsValid = true;\n      for (const inputId in state.inputs) {\n        if (!state.inputs[inputId]) {\n          continue;\n        }\n        if (inputId === action.inputId) {\n          formIsValid = formIsValid && action.isValid;\n        } else {\n          formIsValid = formIsValid && state.inputs[inputId].isValid;\n        }\n      }\n      return {\n        ...state,\n        inputs: {\n          ...state.inputs,\n          [action.inputId]: { value: action.value, isValid: action.isValid }\n        },\n        isValid: formIsValid\n      };\n    case 'SET_DATA':\n      return {\n        inputs: action.inputs,\n        isValid: action.formIsValid\n      };\n    default:\n      return state;\n  }\n};\n\nconst useFormHook = (initialInputs, initialFormValidity) => {\n  const [formState, dispatch] = useReducer(formReducer, {\n    inputs: initialInputs,\n    isValid: initialFormValidity\n  });\n\n  const inputHandler = useCallback((id, value, isValid) => {\n    dispatch({\n      type: 'INPUT_CHANGE',\n      value: value,\n      isValid: isValid,\n      inputId: id\n    });\n  }, []);\n\n  const setFormData = useCallback((inputData, formValidity) => {\n    dispatch({\n      type: 'SET_DATA',\n      inputs: inputData,\n      formIsValid: formValidity\n    });\n  }, []);\n\n  return [formState, inputHandler, setFormData];\n};\n\nexport default useFormHook;\n","import React, { useRef, useState, useEffect } from 'react';\n\nimport Button from './Button';\nimport './ImageUpload.css';\n\nconst ImageUpload = props => {\n  const [file, setFile] = useState();\n  const [previewUrl, setPreviewUrl] = useState();\n  const [isValid, setIsValid] = useState(false);\n\n  const filePickerRef = useRef();\n\n  useEffect(() => {\n    if (!file) {\n      return;\n    }\n    const fileReader = new FileReader();\n    fileReader.onload = () => {\n      setPreviewUrl(fileReader.result);\n    };\n    fileReader.readAsDataURL(file);\n  }, [file]);\n\n  const pickedHandler = event => {\n    let pickedFile;\n    let fileIsValid = isValid;\n    if (event.target.files && event.target.files.length === 1) {\n      pickedFile = event.target.files[0];\n      setFile(pickedFile);\n      setIsValid(true);\n      fileIsValid = true;\n    } else {\n      setIsValid(false);\n      fileIsValid = false;\n    }\n    props.onInput(props.id, pickedFile, fileIsValid);\n  };\n\n  const pickImageHandler = () => {\n    filePickerRef.current.click();\n  };\n\n  return (\n    <div className=\"form-control\">\n      <input\n        id={props.id}\n        ref={filePickerRef}\n        style={{ display: 'none' }}\n        type=\"file\"\n        accept=\".jpg,.png,.jpeg\"\n        onChange={pickedHandler}\n      />\n      <div className={`image-upload ${props.center && 'center'}`}>\n        <div className=\"image-upload__preview\">\n          {previewUrl && <img src={previewUrl} alt=\"Preview\" />}\n          {!previewUrl && <p>Please pick an image.</p>}\n        </div>\n        <Button type=\"button\" onClick={pickImageHandler}>\n          PICK IMAGE\n        </Button>\n      </div>\n      {!isValid && <p>{props.errorText}</p>}\n    </div>\n  );\n};\n\nexport default ImageUpload;\n","import React, { useContext } from \"react\";\nimport { useHistory } from 'react-router-dom';\n\nimport Input from \"../../shared/components/FormElements/Input\";\nimport Button from \"../../shared/components/FormElements/Button\";\nimport ErrorModal from '../../shared/components/UIElements/ErrorModal';\nimport ImageUpload from '../../shared/components/FormElements/ImageUpload';\nimport LoadingSpinner from '../../shared/components/UIElements/LoadingSpinner';\nimport {\n  VALIDATOR_REQUIRE,\n  VALIDATOR_MINLENGTH\n} from \"../../shared/util/validators\";\nimport useFormHook from \"../../shared/hooks/form-hook\";\nimport { useHttpClient } from '../../shared/hooks/http-hook';\nimport { AuthContext } from '../../shared/context/auth-context';\n\nimport \"./PlaceForm.css\";\n\nconst NewPlace = () => {\n  const auth = useContext(AuthContext);\n  const { isLoading, error, sendRequest, clearError } = useHttpClient();\n  const [formState, inputHandler] = useFormHook(\n    {\n      title: {\n        value: \"\",\n        isValid: false\n      },\n      description: {\n        value: \"\",\n        isValid: false\n      },\n      address: {\n        value: '',\n        isValid: false\n      },\n      image: {\n        value: null,\n        isValid: false\n      }\n    },\n    false\n    );\n\n  const history = useHistory();\n\n  const submitHandler = async event => {\n    event.preventDefault();\n    try {\n      const formData = new FormData();\n      debugger;\n      formData.append('title', formState.inputs.title.value);\n      formData.append('description', formState.inputs.description.value);\n      formData.append('address', formState.inputs.address.value);\n      formData.append('image', formState.inputs.image.value);\n      await sendRequest(\n        `${process.env.REACT_APP_BACKEND_URL}/places`,\n        'POST',\n        formData,\n        {\n          Authorization: 'Bearer ' + auth.token\n        }\n      );\n      history.push('/');\n    } catch (err) {}\n  };\n\n  return (\n    <>\n    <ErrorModal error={error} onClear={clearError} />\n    <form className=\"place-form\" onSubmit={submitHandler}>\n    {isLoading && <LoadingSpinner asOverlay />}\n      <Input\n        id=\"title\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Title\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid title.\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"description\"\n        element=\"textarea\"\n        label=\"Description\"\n        validators={[VALIDATOR_MINLENGTH(5)]}\n        errorText=\"Please enter a valid description (at least 5 characters).\"\n        onInput={inputHandler}\n      />\n      <Input\n        id=\"address\"\n        element=\"input\"\n        type=\"text\"\n        label=\"Address\"\n        validators={[VALIDATOR_REQUIRE()]}\n        errorText=\"Please enter a valid address.\"\n        onInput={inputHandler}\n      />\n      <ImageUpload id=\"image\" onInput={inputHandler} errorText=\"Please provide an image.\"/>\n      <Button type=\"submit\" disabled={!formState.isValid}>\n        ADD PLACE\n      </Button>\n    </form>\n    </>\n  );\n};\n\nexport default NewPlace;\n"],"sourceRoot":""}